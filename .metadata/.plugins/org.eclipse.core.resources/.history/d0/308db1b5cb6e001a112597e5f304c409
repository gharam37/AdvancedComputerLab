import java.util.ArrayList;

import java.util.Collections;
import java.util.Stack;
import java.util.Arrays;

public class CFG {

	public static String LRE(String input) {
	    ArrayList<String[]> Grammer=new ArrayList<String[]>();
		String output="";
		//Prepare Grammer
	    String[] rules=input.split(";");
	    for(int i=0;i<rules.length;i++) {
	    	Grammer.add(rules[i].split(","));
	    }
	    for(int i=2;i<Grammer.size();i++) {
	    	//System.out.println(toRuleString(Grammer.get(i)));
	    	String []NewRule = Substitute(Grammer.get(i),Grammer,i);
	    }
	    //System.out.println(Grammer.get(0)[1]);

	    
		return output;
	}
	public static String[] GetStringArray(ArrayList<String> arr) 
    { 
  
        // declaration and initialise String Array 
        String str[] = new String[arr.size()]; 
  
        // ArrayList to Array Conversion 
        for (int j = 0; j < arr.size(); j++) { 
  
            // Assign each value to String array 
            str[j] = arr.get(j); 
        } 
  
        return str; 
    } 
	public static String GetRuleName(String ruleString) {
		String RuleName=ruleString.charAt(0)+"";
		for(int i=1;i<ruleString.length();i++) {
			if((ruleString.charAt(i)+"").equals("'")) {
				RuleName+="'";
			}
		}
		return RuleName;
		
	}
	public static String[] Substitute(String [] rule , ArrayList<String[]> grammer ,int index) {
		String[] newRule=null;
	    ArrayList<String> ListRule=new ArrayList<String>();
	    ListRule.add(rule[0]);
	    //System.out.println(ListRule.get(0));
	    //Loop Over All roles
	    	for(int j=1;j<rule.length;j++) {
	    		if(Character.isUpperCase(rule[j].charAt(0))){
	    			String SubRule=GetRuleName(rule[j]);
	    			System.out.println("The rule is"+SubRule);
	    			for(int i=0;i<grammer.size();i++) {
	    			if(grammer.get(i)[0].equals(SubRule)) {

	    				    System.out.println("Got"+SubRule+toRuleString(grammer.get(i)));
	    			        String[] SubRuleArray=grammer.get(i);
	    			        for(int k=1;k<SubRuleArray.length;k++) {
	    			        	String newString=SubRuleArray[k]+rule[j].substring((SubRule).length(),rule[j].length());
	    			        	if(!newString.equals(rule[j])) {
	    			        	System.out.println(newString);
	    			        	ListRule.add(newString);
	    			        	}
	    			        }
	    			        for(int z=1;z<rule.length;z++) {
	    			        	if(z!=j) {
	    			        	ListRule.add(rule[z]);
	    			        	System.out.println(rule[z]);

	    			        	}
	    			        }
	    			        
	    					//System.out.println(SubRule);
	    					
	    			}
	    			}
	    	    	rule=GetStringArray(ListRule);
	    	    	j=1;
	    	    	System.out.println(toRuleString(rule));
	    		    


	    		}
	    		ListRule=new ArrayList<String>();
	    		ListRule.add(rule[0]);
	    		
	    		
	    	
	    }


		return newRule;
		
	}
	public static String toRuleString(String[] RuleArray) {
		String RuleString="";
		for(int i=0;i<RuleArray.length;i++) {
			if(i<RuleArray.length-1) {
				RuleString +=RuleArray[i]+",";
				
			}
			else {
				RuleString +=RuleArray[i]+"";
			}
		}
		return RuleString;
	}
	
	public static void main(String[]args) {
		String input ="S,TS';S',cTS',;T,aSb,iaLb,i;L,SdL,S";
				
        String output = LRE(input);
        System.out.print(output);
		
		System.out.println("Hello World");
		
	}
}
